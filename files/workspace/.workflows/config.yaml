resource_types:
  clickhouse:
    hostname:
      type: string
    database:
      type: string
    port:
      type: uint
    username:
      type: string
    password:
      type: string

resource:
  ch_staging:
    type: clickhouse
    values:
      hostname: server.internal.inc
      port: 8123
      username: tasks
      password: tasks

secrets: {}



actions:
  error_handler:
    type: shell
    shell:
      cmd: echo "ERROR! at {{ input.step_name }}"

  allunite.ddd:
    type: shell
    shell:
      cmd:
    path: run/last.sh
    args: "--var ${inputs.varname}"

    input:
      varname:
        name: Readable name
        required: true
        order: 0
        type: string
        default: ""

      # varname1:
      #   name: Readable name
      #   required: true
      #   order: 0
      #   string:
      #     default: ""

      varname2:
        type: int
        default: 0

    output:
      properties:
        id:
          type: int
        valid:
          type: boolean

  allunite.action1:
    type: shell
    cmd: "echo \"A1 Input: {{ input.vvv }}\" && echo 'OUTPUT:{\"result\": \"action1 output\"}'"

    input:
      vvv:
        type: string

    output:
      properties:
        result:
          type: string

  allunite.action2:
    type: shell
    cmd: "echo \"A2 Input: {{ input.vvv }}\" && echo 'OUTPUT:{\"result\": \"action2 output\"}'"

    input:
      vvv:
        type: string

    output:
      properties:
        result:
          type: string

  core.mail:
    type: shell
    content: |
      #!/bin/sh
      
      echo 'OUTPUT: {"test": "ggg"}'

    input:
      vvv:
        type: string

    output:
      properties:
        test:
          type: string


tasks:
  task1:
    input:
      field1:
        name: "Field 1"
        description: "Here goes the description"
        required: true
        type: string
        default: "111"
      field2:
        name: "Field 2"
        description: "Here goes the description"
        required: false
        type: string

    flow:
      step1:
        action: allunite.action1
        input:
          vvv: "test - {{ input.field1 }}"

      step2:
        action: allunite.action2
        input:
          vvv: "{{ step1.output.result }}"
        depends_on:
          - step1


triggers:
  trigger01:
    enabled: false
    type: "scheduler"
    cron: "*/20 * * * * *"
    task: task1
    input:
      field1: "trigger"

globals:
  error_handler: error_handler

