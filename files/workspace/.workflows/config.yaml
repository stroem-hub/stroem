actions:
  error_handler:
    type: shell
    cmd: echo "ERROR! at {{ input.step_name }}"

  allunite.ddd:
    shell:
      cmd:
    type: cmd
    path: run/last.sh
    args: "--var ${inputs.varname}"

    input:
      varname:
        type: "string"
        default: ""
        required: true
        order: 0

      varname2:
        type: "int"
        default: 0

    output:
      properties:
        id:
          type: int
        valid:
          type: boolean

  allunite.action1:
    type: cmd
    cmd: "echo \"A1 Input: {{ input.vvv }}\" && echo 'OUTPUT:{\"result\": \"action1 output\"}'"

    input:
      vvv:
        type: string

    output:
      properties:
        result:
          type: string

  allunite.action2:
    type: cmd
    cmd: "echo \"A2 Input: {{ input.vvv }}\" && echo 'OUTPUT:{\"result\": \"action2 output\"}'"

    input:
      vvv:
        type: string

    output:
      properties:
        result:
          type: string

  core.mail:
    type: cmd
    content: |
      #!/bin/sh
      
      echo 'OUTPUT: {"test": "ggg"}'

    input:
      vvv:
        type: string

    output:
      properties:
        test:
          type: string


tasks:
  task1:
    input:
      field1:
        type: string
        default: 111

    flow:
      step1:
        action: allunite.action1
        input:
          vvv: "test - {{ input.field1 }}"

      step2:
        action: allunite.action2
        input:
          vvv: "{{ step1.output.result }}"
        depends_on:
          - step1


triggers:
  trigger01:
    enabled: false
    type: "cron"
    cron: "*/20 * * * * *"
    task: task1
    input:
      field1: "trigger"

globals:
  error_handler: error_handler

